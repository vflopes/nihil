// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: analysis/analysis.proto

package analysis

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MovingAverageParameters_Mode int32

const (
	MovingAverageParameters_SIMPLE MovingAverageParameters_Mode = 0
)

// Enum value maps for MovingAverageParameters_Mode.
var (
	MovingAverageParameters_Mode_name = map[int32]string{
		0: "SIMPLE",
	}
	MovingAverageParameters_Mode_value = map[string]int32{
		"SIMPLE": 0,
	}
)

func (x MovingAverageParameters_Mode) Enum() *MovingAverageParameters_Mode {
	p := new(MovingAverageParameters_Mode)
	*p = x
	return p
}

func (x MovingAverageParameters_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovingAverageParameters_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_analysis_analysis_proto_enumTypes[0].Descriptor()
}

func (MovingAverageParameters_Mode) Type() protoreflect.EnumType {
	return &file_analysis_analysis_proto_enumTypes[0]
}

func (x MovingAverageParameters_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovingAverageParameters_Mode.Descriptor instead.
func (MovingAverageParameters_Mode) EnumDescriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{1, 0}
}

type FinancialReturnParameters_Function int32

const (
	FinancialReturnParameters_RATIO             FinancialReturnParameters_Function = 0
	FinancialReturnParameters_NATURAL_LOGARITHM FinancialReturnParameters_Function = 1
)

// Enum value maps for FinancialReturnParameters_Function.
var (
	FinancialReturnParameters_Function_name = map[int32]string{
		0: "RATIO",
		1: "NATURAL_LOGARITHM",
	}
	FinancialReturnParameters_Function_value = map[string]int32{
		"RATIO":             0,
		"NATURAL_LOGARITHM": 1,
	}
)

func (x FinancialReturnParameters_Function) Enum() *FinancialReturnParameters_Function {
	p := new(FinancialReturnParameters_Function)
	*p = x
	return p
}

func (x FinancialReturnParameters_Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinancialReturnParameters_Function) Descriptor() protoreflect.EnumDescriptor {
	return file_analysis_analysis_proto_enumTypes[1].Descriptor()
}

func (FinancialReturnParameters_Function) Type() protoreflect.EnumType {
	return &file_analysis_analysis_proto_enumTypes[1]
}

func (x FinancialReturnParameters_Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FinancialReturnParameters_Function.Descriptor instead.
func (FinancialReturnParameters_Function) EnumDescriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{2, 0}
}

type ArithmeticOperationsParameters_Operation int32

const (
	ArithmeticOperationsParameters_TIMES_SQRT ArithmeticOperationsParameters_Operation = 0
)

// Enum value maps for ArithmeticOperationsParameters_Operation.
var (
	ArithmeticOperationsParameters_Operation_name = map[int32]string{
		0: "TIMES_SQRT",
	}
	ArithmeticOperationsParameters_Operation_value = map[string]int32{
		"TIMES_SQRT": 0,
	}
)

func (x ArithmeticOperationsParameters_Operation) Enum() *ArithmeticOperationsParameters_Operation {
	p := new(ArithmeticOperationsParameters_Operation)
	*p = x
	return p
}

func (x ArithmeticOperationsParameters_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArithmeticOperationsParameters_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_analysis_analysis_proto_enumTypes[2].Descriptor()
}

func (ArithmeticOperationsParameters_Operation) Type() protoreflect.EnumType {
	return &file_analysis_analysis_proto_enumTypes[2]
}

func (x ArithmeticOperationsParameters_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArithmeticOperationsParameters_Operation.Descriptor instead.
func (ArithmeticOperationsParameters_Operation) EnumDescriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{3, 0}
}

type AnalysisParameters_ValueGetter int32

const (
	AnalysisParameters_ABSOLUTE_VALUE    AnalysisParameters_ValueGetter = 0
	AnalysisParameters_CANDLESTICK_HIGH  AnalysisParameters_ValueGetter = 1
	AnalysisParameters_CANDLESTICK_OPEN  AnalysisParameters_ValueGetter = 2
	AnalysisParameters_CANDLESTICK_CLOSE AnalysisParameters_ValueGetter = 3
	AnalysisParameters_CANDLESTICK_LOW   AnalysisParameters_ValueGetter = 4
)

// Enum value maps for AnalysisParameters_ValueGetter.
var (
	AnalysisParameters_ValueGetter_name = map[int32]string{
		0: "ABSOLUTE_VALUE",
		1: "CANDLESTICK_HIGH",
		2: "CANDLESTICK_OPEN",
		3: "CANDLESTICK_CLOSE",
		4: "CANDLESTICK_LOW",
	}
	AnalysisParameters_ValueGetter_value = map[string]int32{
		"ABSOLUTE_VALUE":    0,
		"CANDLESTICK_HIGH":  1,
		"CANDLESTICK_OPEN":  2,
		"CANDLESTICK_CLOSE": 3,
		"CANDLESTICK_LOW":   4,
	}
)

func (x AnalysisParameters_ValueGetter) Enum() *AnalysisParameters_ValueGetter {
	p := new(AnalysisParameters_ValueGetter)
	*p = x
	return p
}

func (x AnalysisParameters_ValueGetter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnalysisParameters_ValueGetter) Descriptor() protoreflect.EnumDescriptor {
	return file_analysis_analysis_proto_enumTypes[3].Descriptor()
}

func (AnalysisParameters_ValueGetter) Type() protoreflect.EnumType {
	return &file_analysis_analysis_proto_enumTypes[3]
}

func (x AnalysisParameters_ValueGetter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnalysisParameters_ValueGetter.Descriptor instead.
func (AnalysisParameters_ValueGetter) EnumDescriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{5, 0}
}

type Series_Unit int32

const (
	Series_UNDEFINED Series_Unit = 0
	Series_RATIO     Series_Unit = 1
)

// Enum value maps for Series_Unit.
var (
	Series_Unit_name = map[int32]string{
		0: "UNDEFINED",
		1: "RATIO",
	}
	Series_Unit_value = map[string]int32{
		"UNDEFINED": 0,
		"RATIO":     1,
	}
)

func (x Series_Unit) Enum() *Series_Unit {
	p := new(Series_Unit)
	*p = x
	return p
}

func (x Series_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Series_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_analysis_analysis_proto_enumTypes[4].Descriptor()
}

func (Series_Unit) Type() protoreflect.EnumType {
	return &file_analysis_analysis_proto_enumTypes[4]
}

func (x Series_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Series_Unit.Descriptor instead.
func (Series_Unit) EnumDescriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{8, 0}
}

type StandardDeviationParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	MeanName   string `protobuf:"bytes,2,opt,name=mean_name,json=meanName,proto3" json:"mean_name,omitempty"`
	// How many periods to aggregate
	Periods int64 `protobuf:"varint,3,opt,name=periods,proto3" json:"periods,omitempty"`
}

func (x *StandardDeviationParameters) Reset() {
	*x = StandardDeviationParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandardDeviationParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardDeviationParameters) ProtoMessage() {}

func (x *StandardDeviationParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardDeviationParameters.ProtoReflect.Descriptor instead.
func (*StandardDeviationParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{0}
}

func (x *StandardDeviationParameters) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *StandardDeviationParameters) GetMeanName() string {
	if x != nil {
		return x.MeanName
	}
	return ""
}

func (x *StandardDeviationParameters) GetPeriods() int64 {
	if x != nil {
		return x.Periods
	}
	return 0
}

type MovingAverageParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	// How many periods to aggregate
	Periods int64 `protobuf:"varint,2,opt,name=periods,proto3" json:"periods,omitempty"`
	// The granularity, or, how many datapoints the moving average will track
	// 1 will generate 1 to 1 with source series
	// Must be > 1
	Granularity int64                        `protobuf:"varint,3,opt,name=granularity,proto3" json:"granularity,omitempty"`
	Mode        MovingAverageParameters_Mode `protobuf:"varint,4,opt,name=mode,proto3,enum=nihil.analysis.MovingAverageParameters_Mode" json:"mode,omitempty"`
}

func (x *MovingAverageParameters) Reset() {
	*x = MovingAverageParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingAverageParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingAverageParameters) ProtoMessage() {}

func (x *MovingAverageParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingAverageParameters.ProtoReflect.Descriptor instead.
func (*MovingAverageParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{1}
}

func (x *MovingAverageParameters) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *MovingAverageParameters) GetPeriods() int64 {
	if x != nil {
		return x.Periods
	}
	return 0
}

func (x *MovingAverageParameters) GetGranularity() int64 {
	if x != nil {
		return x.Granularity
	}
	return 0
}

func (x *MovingAverageParameters) GetMode() MovingAverageParameters_Mode {
	if x != nil {
		return x.Mode
	}
	return MovingAverageParameters_SIMPLE
}

type FinancialReturnParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	// How many backwards periods to compare the current value
	// The current value is indexed at 1, so you must specifcy values > 1
	Periods int64 `protobuf:"varint,2,opt,name=periods,proto3" json:"periods,omitempty"`
	// Which function to use to calculate the return
	Function FinancialReturnParameters_Function `protobuf:"varint,3,opt,name=function,proto3,enum=nihil.analysis.FinancialReturnParameters_Function" json:"function,omitempty"`
}

func (x *FinancialReturnParameters) Reset() {
	*x = FinancialReturnParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinancialReturnParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinancialReturnParameters) ProtoMessage() {}

func (x *FinancialReturnParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinancialReturnParameters.ProtoReflect.Descriptor instead.
func (*FinancialReturnParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{2}
}

func (x *FinancialReturnParameters) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *FinancialReturnParameters) GetPeriods() int64 {
	if x != nil {
		return x.Periods
	}
	return 0
}

func (x *FinancialReturnParameters) GetFunction() FinancialReturnParameters_Function {
	if x != nil {
		return x.Function
	}
	return FinancialReturnParameters_RATIO
}

type ArithmeticOperationsParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string                                   `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	Operation  ArithmeticOperationsParameters_Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=nihil.analysis.ArithmeticOperationsParameters_Operation" json:"operation,omitempty"`
	Value      float64                                  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ArithmeticOperationsParameters) Reset() {
	*x = ArithmeticOperationsParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArithmeticOperationsParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArithmeticOperationsParameters) ProtoMessage() {}

func (x *ArithmeticOperationsParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArithmeticOperationsParameters.ProtoReflect.Descriptor instead.
func (*ArithmeticOperationsParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{3}
}

func (x *ArithmeticOperationsParameters) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *ArithmeticOperationsParameters) GetOperation() ArithmeticOperationsParameters_Operation {
	if x != nil {
		return x.Operation
	}
	return ArithmeticOperationsParameters_TIMES_SQRT
}

func (x *ArithmeticOperationsParameters) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type BollingerBandsParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The mean and standard deviation series must have the same length
	MeanName              string `protobuf:"bytes,1,opt,name=mean_name,json=meanName,proto3" json:"mean_name,omitempty"`
	StandardDeviationName string `protobuf:"bytes,2,opt,name=standard_deviation_name,json=standardDeviationName,proto3" json:"standard_deviation_name,omitempty"`
	// The number that will multiply the standard deviation to form the maximum (high) and minimum (low) values of the candlestick
	// Financial market:
	// 2.1 for long term
	// 1.9 for short term
	Factor float64 `protobuf:"fixed64,3,opt,name=factor,proto3" json:"factor,omitempty"`
}

func (x *BollingerBandsParameters) Reset() {
	*x = BollingerBandsParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BollingerBandsParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BollingerBandsParameters) ProtoMessage() {}

func (x *BollingerBandsParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BollingerBandsParameters.ProtoReflect.Descriptor instead.
func (*BollingerBandsParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{4}
}

func (x *BollingerBandsParameters) GetMeanName() string {
	if x != nil {
		return x.MeanName
	}
	return ""
}

func (x *BollingerBandsParameters) GetStandardDeviationName() string {
	if x != nil {
		return x.StandardDeviationName
	}
	return ""
}

func (x *BollingerBandsParameters) GetFactor() float64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

type AnalysisParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Parameters:
	//	*AnalysisParameters_MovingAverageParameters
	//	*AnalysisParameters_FinancialReturnParameters
	//	*AnalysisParameters_StandardDeviationParameters
	//	*AnalysisParameters_ArithmeticOperationsParameters
	//	*AnalysisParameters_BollingerBandsParameters
	Parameters isAnalysisParameters_Parameters `protobuf_oneof:"parameters"`
	ValueFrom  AnalysisParameters_ValueGetter  `protobuf:"varint,4,opt,name=value_from,json=valueFrom,proto3,enum=nihil.analysis.AnalysisParameters_ValueGetter" json:"value_from,omitempty"`
}

func (x *AnalysisParameters) Reset() {
	*x = AnalysisParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalysisParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalysisParameters) ProtoMessage() {}

func (x *AnalysisParameters) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalysisParameters.ProtoReflect.Descriptor instead.
func (*AnalysisParameters) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{5}
}

func (m *AnalysisParameters) GetParameters() isAnalysisParameters_Parameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (x *AnalysisParameters) GetMovingAverageParameters() *MovingAverageParameters {
	if x, ok := x.GetParameters().(*AnalysisParameters_MovingAverageParameters); ok {
		return x.MovingAverageParameters
	}
	return nil
}

func (x *AnalysisParameters) GetFinancialReturnParameters() *FinancialReturnParameters {
	if x, ok := x.GetParameters().(*AnalysisParameters_FinancialReturnParameters); ok {
		return x.FinancialReturnParameters
	}
	return nil
}

func (x *AnalysisParameters) GetStandardDeviationParameters() *StandardDeviationParameters {
	if x, ok := x.GetParameters().(*AnalysisParameters_StandardDeviationParameters); ok {
		return x.StandardDeviationParameters
	}
	return nil
}

func (x *AnalysisParameters) GetArithmeticOperationsParameters() *ArithmeticOperationsParameters {
	if x, ok := x.GetParameters().(*AnalysisParameters_ArithmeticOperationsParameters); ok {
		return x.ArithmeticOperationsParameters
	}
	return nil
}

func (x *AnalysisParameters) GetBollingerBandsParameters() *BollingerBandsParameters {
	if x, ok := x.GetParameters().(*AnalysisParameters_BollingerBandsParameters); ok {
		return x.BollingerBandsParameters
	}
	return nil
}

func (x *AnalysisParameters) GetValueFrom() AnalysisParameters_ValueGetter {
	if x != nil {
		return x.ValueFrom
	}
	return AnalysisParameters_ABSOLUTE_VALUE
}

type isAnalysisParameters_Parameters interface {
	isAnalysisParameters_Parameters()
}

type AnalysisParameters_MovingAverageParameters struct {
	MovingAverageParameters *MovingAverageParameters `protobuf:"bytes,1,opt,name=moving_average_parameters,json=movingAverageParameters,proto3,oneof"`
}

type AnalysisParameters_FinancialReturnParameters struct {
	FinancialReturnParameters *FinancialReturnParameters `protobuf:"bytes,2,opt,name=financial_return_parameters,json=financialReturnParameters,proto3,oneof"`
}

type AnalysisParameters_StandardDeviationParameters struct {
	StandardDeviationParameters *StandardDeviationParameters `protobuf:"bytes,3,opt,name=standard_deviation_parameters,json=standardDeviationParameters,proto3,oneof"`
}

type AnalysisParameters_ArithmeticOperationsParameters struct {
	ArithmeticOperationsParameters *ArithmeticOperationsParameters `protobuf:"bytes,5,opt,name=arithmetic_operations_parameters,json=arithmeticOperationsParameters,proto3,oneof"`
}

type AnalysisParameters_BollingerBandsParameters struct {
	BollingerBandsParameters *BollingerBandsParameters `protobuf:"bytes,6,opt,name=bollinger_bands_parameters,json=bollingerBandsParameters,proto3,oneof"`
}

func (*AnalysisParameters_MovingAverageParameters) isAnalysisParameters_Parameters() {}

func (*AnalysisParameters_FinancialReturnParameters) isAnalysisParameters_Parameters() {}

func (*AnalysisParameters_StandardDeviationParameters) isAnalysisParameters_Parameters() {}

func (*AnalysisParameters_ArithmeticOperationsParameters) isAnalysisParameters_Parameters() {}

func (*AnalysisParameters_BollingerBandsParameters) isAnalysisParameters_Parameters() {}

type Candlestick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High  float64 `protobuf:"fixed64,1,opt,name=high,proto3" json:"high,omitempty"`
	Open  float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	Close float64 `protobuf:"fixed64,3,opt,name=close,proto3" json:"close,omitempty"`
	Low   float64 `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *Candlestick) Reset() {
	*x = Candlestick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candlestick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candlestick) ProtoMessage() {}

func (x *Candlestick) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candlestick.ProtoReflect.Descriptor instead.
func (*Candlestick) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{6}
}

func (x *Candlestick) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candlestick) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candlestick) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candlestick) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

type DataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64        `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AbsoluteValue float64      `protobuf:"fixed64,2,opt,name=absolute_value,json=absoluteValue,proto3" json:"absolute_value,omitempty"`
	Candlestick   *Candlestick `protobuf:"bytes,3,opt,name=candlestick,proto3" json:"candlestick,omitempty"`
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{7}
}

func (x *DataPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataPoint) GetAbsoluteValue() float64 {
	if x != nil {
		return x.AbsoluteValue
	}
	return 0
}

func (x *DataPoint) GetCandlestick() *Candlestick {
	if x != nil {
		return x.Candlestick
	}
	return nil
}

type Series struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataPoints []*DataPoint `protobuf:"bytes,1,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	Name       string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit       Series_Unit  `protobuf:"varint,3,opt,name=unit,proto3,enum=nihil.analysis.Series_Unit" json:"unit,omitempty"`
}

func (x *Series) Reset() {
	*x = Series{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{8}
}

func (x *Series) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *Series) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Series) GetUnit() Series_Unit {
	if x != nil {
		return x.Unit
	}
	return Series_UNDEFINED
}

type Axis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Series []*Series `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
	Name   string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Axis) Reset() {
	*x = Axis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Axis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Axis) ProtoMessage() {}

func (x *Axis) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Axis.ProtoReflect.Descriptor instead.
func (*Axis) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{9}
}

func (x *Axis) GetSeries() []*Series {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Axis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Axis              []*Axis `protobuf:"bytes,1,rep,name=axis,proto3" json:"axis,omitempty"`
	ResolutionSeconds int64   `protobuf:"varint,2,opt,name=resolution_seconds,json=resolutionSeconds,proto3" json:"resolution_seconds,omitempty"`
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{10}
}

func (x *Space) GetAxis() []*Axis {
	if x != nil {
		return x.Axis
	}
	return nil
}

func (x *Space) GetResolutionSeconds() int64 {
	if x != nil {
		return x.ResolutionSeconds
	}
	return 0
}

type AxisPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParametersSequence []*AnalysisParameters `protobuf:"bytes,1,rep,name=parameters_sequence,json=parametersSequence,proto3" json:"parameters_sequence,omitempty"`
	Source             *Axis                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *AxisPipeline) Reset() {
	*x = AxisPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AxisPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AxisPipeline) ProtoMessage() {}

func (x *AxisPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AxisPipeline.ProtoReflect.Descriptor instead.
func (*AxisPipeline) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{11}
}

func (x *AxisPipeline) GetParametersSequence() []*AnalysisParameters {
	if x != nil {
		return x.ParametersSequence
	}
	return nil
}

func (x *AxisPipeline) GetSource() *Axis {
	if x != nil {
		return x.Source
	}
	return nil
}

type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps []*Pipeline_Step `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{12}
}

func (x *Pipeline) GetSteps() []*Pipeline_Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Pipeline_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AxisPipeline *AxisPipeline     `protobuf:"bytes,2,opt,name=axis_pipeline,json=axisPipeline,proto3" json:"axis_pipeline,omitempty"`
	Rename       map[string]string `protobuf:"bytes,3,rep,name=rename,proto3" json:"rename,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pipeline_Step) Reset() {
	*x = Pipeline_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analysis_analysis_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline_Step) ProtoMessage() {}

func (x *Pipeline_Step) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_analysis_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline_Step.ProtoReflect.Descriptor instead.
func (*Pipeline_Step) Descriptor() ([]byte, []int) {
	return file_analysis_analysis_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Pipeline_Step) GetAxisPipeline() *AxisPipeline {
	if x != nil {
		return x.AxisPipeline
	}
	return nil
}

func (x *Pipeline_Step) GetRename() map[string]string {
	if x != nil {
		return x.Rename
	}
	return nil
}

var File_analysis_analysis_proto protoreflect.FileDescriptor

var file_analysis_analysis_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6e, 0x69, 0x68, 0x69, 0x6c,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0x75, 0x0a, 0x1b, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x61,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73,
	0x22, 0xcc, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72,
	0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x12, 0x0a, 0x04, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x00, 0x22,
	0xd4, 0x01, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x73, 0x12, 0x4e, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6e, 0x69, 0x68,
	0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x41, 0x4c, 0x5f, 0x4c, 0x4f, 0x47, 0x41, 0x52,
	0x49, 0x54, 0x48, 0x4d, 0x10, 0x01, 0x22, 0xcc, 0x01, 0x0a, 0x1e, 0x41, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e,
	0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1b, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x5f, 0x53,
	0x51, 0x52, 0x54, 0x10, 0x00, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x99, 0x06, 0x0a, 0x12, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x65, 0x0a, 0x19, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x69, 0x68, 0x69,
	0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x17, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6b, 0x0a,
	0x1b, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x19, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x71, 0x0a, 0x1d, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x44, 0x65, 0x76, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00,
	0x52, 0x1b, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x7a, 0x0a,
	0x20, 0x61, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x65,
	0x74, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x1e, 0x61, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x65, 0x74, 0x69, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x68, 0x0a, 0x1a, 0x62, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x42,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x18, 0x62, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x22, 0x79, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x47, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x42, 0x53, 0x4f, 0x4c, 0x55, 0x54, 0x45, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x53,
	0x54, 0x49, 0x43, 0x4b, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x41, 0x4e, 0x44, 0x4c, 0x45, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x53, 0x54, 0x49, 0x43, 0x4b,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x44,
	0x4c, 0x45, 0x53, 0x54, 0x49, 0x43, 0x4b, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x42, 0x0c, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x0b, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x61, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3d, 0x0a,
	0x0b, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x22, 0xab, 0x01, 0x0a,
	0x06, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e,
	0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x20, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x10, 0x01, 0x22, 0x4a, 0x0a, 0x04, 0x41, 0x78,
	0x69, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x61, 0x78, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41,
	0x78, 0x69, 0x73, 0x52, 0x04, 0x61, 0x78, 0x69, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x0c, 0x41, 0x78, 0x69,
	0x73, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x41, 0x78, 0x69, 0x73, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x89, 0x02, 0x0a,
	0x08, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xc7,
	0x01, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x78, 0x69, 0x73, 0x5f,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x41, 0x78, 0x69, 0x73, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x0c, 0x61, 0x78,
	0x69, 0x73, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6e, 0x69, 0x68,
	0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x39, 0x0a,
	0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x49, 0x0a, 0x0f, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x02, 0x44,
	0x6f, 0x12, 0x18, 0x2e, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x14, 0x2e, 0x6e, 0x69,
	0x68, 0x69, 0x6c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x41, 0x78, 0x69,
	0x73, 0x22, 0x00, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x76, 0x66, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x6e, 0x69, 0x68, 0x69, 0x6c, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analysis_analysis_proto_rawDescOnce sync.Once
	file_analysis_analysis_proto_rawDescData = file_analysis_analysis_proto_rawDesc
)

func file_analysis_analysis_proto_rawDescGZIP() []byte {
	file_analysis_analysis_proto_rawDescOnce.Do(func() {
		file_analysis_analysis_proto_rawDescData = protoimpl.X.CompressGZIP(file_analysis_analysis_proto_rawDescData)
	})
	return file_analysis_analysis_proto_rawDescData
}

var file_analysis_analysis_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_analysis_analysis_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_analysis_analysis_proto_goTypes = []interface{}{
	(MovingAverageParameters_Mode)(0),             // 0: nihil.analysis.MovingAverageParameters.Mode
	(FinancialReturnParameters_Function)(0),       // 1: nihil.analysis.FinancialReturnParameters.Function
	(ArithmeticOperationsParameters_Operation)(0), // 2: nihil.analysis.ArithmeticOperationsParameters.Operation
	(AnalysisParameters_ValueGetter)(0),           // 3: nihil.analysis.AnalysisParameters.ValueGetter
	(Series_Unit)(0),                              // 4: nihil.analysis.Series.Unit
	(*StandardDeviationParameters)(nil),           // 5: nihil.analysis.StandardDeviationParameters
	(*MovingAverageParameters)(nil),               // 6: nihil.analysis.MovingAverageParameters
	(*FinancialReturnParameters)(nil),             // 7: nihil.analysis.FinancialReturnParameters
	(*ArithmeticOperationsParameters)(nil),        // 8: nihil.analysis.ArithmeticOperationsParameters
	(*BollingerBandsParameters)(nil),              // 9: nihil.analysis.BollingerBandsParameters
	(*AnalysisParameters)(nil),                    // 10: nihil.analysis.AnalysisParameters
	(*Candlestick)(nil),                           // 11: nihil.analysis.Candlestick
	(*DataPoint)(nil),                             // 12: nihil.analysis.DataPoint
	(*Series)(nil),                                // 13: nihil.analysis.Series
	(*Axis)(nil),                                  // 14: nihil.analysis.Axis
	(*Space)(nil),                                 // 15: nihil.analysis.Space
	(*AxisPipeline)(nil),                          // 16: nihil.analysis.AxisPipeline
	(*Pipeline)(nil),                              // 17: nihil.analysis.Pipeline
	(*Pipeline_Step)(nil),                         // 18: nihil.analysis.Pipeline.Step
	nil,                                           // 19: nihil.analysis.Pipeline.Step.RenameEntry
}
var file_analysis_analysis_proto_depIdxs = []int32{
	0,  // 0: nihil.analysis.MovingAverageParameters.mode:type_name -> nihil.analysis.MovingAverageParameters.Mode
	1,  // 1: nihil.analysis.FinancialReturnParameters.function:type_name -> nihil.analysis.FinancialReturnParameters.Function
	2,  // 2: nihil.analysis.ArithmeticOperationsParameters.operation:type_name -> nihil.analysis.ArithmeticOperationsParameters.Operation
	6,  // 3: nihil.analysis.AnalysisParameters.moving_average_parameters:type_name -> nihil.analysis.MovingAverageParameters
	7,  // 4: nihil.analysis.AnalysisParameters.financial_return_parameters:type_name -> nihil.analysis.FinancialReturnParameters
	5,  // 5: nihil.analysis.AnalysisParameters.standard_deviation_parameters:type_name -> nihil.analysis.StandardDeviationParameters
	8,  // 6: nihil.analysis.AnalysisParameters.arithmetic_operations_parameters:type_name -> nihil.analysis.ArithmeticOperationsParameters
	9,  // 7: nihil.analysis.AnalysisParameters.bollinger_bands_parameters:type_name -> nihil.analysis.BollingerBandsParameters
	3,  // 8: nihil.analysis.AnalysisParameters.value_from:type_name -> nihil.analysis.AnalysisParameters.ValueGetter
	11, // 9: nihil.analysis.DataPoint.candlestick:type_name -> nihil.analysis.Candlestick
	12, // 10: nihil.analysis.Series.data_points:type_name -> nihil.analysis.DataPoint
	4,  // 11: nihil.analysis.Series.unit:type_name -> nihil.analysis.Series.Unit
	13, // 12: nihil.analysis.Axis.series:type_name -> nihil.analysis.Series
	14, // 13: nihil.analysis.Space.axis:type_name -> nihil.analysis.Axis
	10, // 14: nihil.analysis.AxisPipeline.parameters_sequence:type_name -> nihil.analysis.AnalysisParameters
	14, // 15: nihil.analysis.AxisPipeline.source:type_name -> nihil.analysis.Axis
	18, // 16: nihil.analysis.Pipeline.steps:type_name -> nihil.analysis.Pipeline.Step
	16, // 17: nihil.analysis.Pipeline.Step.axis_pipeline:type_name -> nihil.analysis.AxisPipeline
	19, // 18: nihil.analysis.Pipeline.Step.rename:type_name -> nihil.analysis.Pipeline.Step.RenameEntry
	17, // 19: nihil.analysis.AnalysisService.Do:input_type -> nihil.analysis.Pipeline
	14, // 20: nihil.analysis.AnalysisService.Do:output_type -> nihil.analysis.Axis
	20, // [20:21] is the sub-list for method output_type
	19, // [19:20] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_analysis_analysis_proto_init() }
func file_analysis_analysis_proto_init() {
	if File_analysis_analysis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analysis_analysis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandardDeviationParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingAverageParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinancialReturnParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArithmeticOperationsParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BollingerBandsParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalysisParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candlestick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Series); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Axis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AxisPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analysis_analysis_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_analysis_analysis_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AnalysisParameters_MovingAverageParameters)(nil),
		(*AnalysisParameters_FinancialReturnParameters)(nil),
		(*AnalysisParameters_StandardDeviationParameters)(nil),
		(*AnalysisParameters_ArithmeticOperationsParameters)(nil),
		(*AnalysisParameters_BollingerBandsParameters)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analysis_analysis_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analysis_analysis_proto_goTypes,
		DependencyIndexes: file_analysis_analysis_proto_depIdxs,
		EnumInfos:         file_analysis_analysis_proto_enumTypes,
		MessageInfos:      file_analysis_analysis_proto_msgTypes,
	}.Build()
	File_analysis_analysis_proto = out.File
	file_analysis_analysis_proto_rawDesc = nil
	file_analysis_analysis_proto_goTypes = nil
	file_analysis_analysis_proto_depIdxs = nil
}
